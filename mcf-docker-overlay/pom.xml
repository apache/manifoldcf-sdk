<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>mcf-docker-overlay</artifactId>
	<packaging>jar</packaging>
	<name>Apache ManifoldCF SDK - Docker Overlay</name>

	<parent>
		<groupId>org.apache.manifoldcf</groupId>
		<artifactId>mcf-sdk</artifactId>
		<version>0.0.4</version>
	</parent>

	<properties>

		<docker.tomcat.port.external>8345</docker.tomcat.port.external>
		<docker.tomcat.port.internal>8345</docker.tomcat.port.internal>

		<docker.mcf.database.port.internal>5432</docker.mcf.database.port.internal>
		<docker.mcf.database.port.external>5432</docker.mcf.database.port.external>
		<docker.mcf.database.vendor>postgres</docker.mcf.database.vendor>
		<docker.mcf.database.vendor.version>${postgresql.version}</docker.mcf.database.vendor.version>
		<docker.mcf.database.image>${docker.mcf.database.vendor}:${docker.mcf.database.vendor.version}</docker.mcf.database.image>
		<docker.mcf.database.server.db.name>manifoldcf</docker.mcf.database.server.db.name>
		<docker.mcf.database.username>manifoldcf</docker.mcf.database.username>
		<docker.mcf.database.password>manifoldcf</docker.mcf.database.password>
		<docker.mcf.database.driver>org.postgresql.Driver</docker.mcf.database.driver>
		<docker.mcf.database.dialect>org.hibernate.dialect.PostgreSQLDialect</docker.mcf.database.dialect>
		<docker.mcf.database.url>jdbc:postgresql://postgre:5433/manifoldcf?characterEncoding=UTF-8</docker.mcf.database.url>
		<docker.mcf.database.csrf.disabled>true</docker.mcf.database.csrf.disabled>
		<docker.mcf.database.cors.enabled>true</docker.mcf.database.cors.enabled>
		<docker.mcf.time.test>400000</docker.mcf.time.test>
		<docker-maven-plugin.skip.save>false</docker-maven-plugin.skip.save>
		<docker-maven-plugin.build.save>false</docker-maven-plugin.build.save>
	</properties>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-jar-extensions</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.apache.manifoldcf</groupId>
									<artifactId>mcf-extensions-jar</artifactId>
									<version>${project.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>${project.parent.basedir}/target/extensions</outputDirectory>
								</artifactItem>
							</artifactItems>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-and-filter-docker-resources</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.parent.basedir}/target</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/docker</directory>
									<filtering>true</filtering>
									<excludes>
										<exclude>**/*.jar</exclude>
										<exclude>**/*.so</exclude>
										<exclude>**/*.gz</exclude>
									</excludes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-and-filter-docker-resources-non-filtered</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.parent.basedir}/target</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/docker</directory>
									<filtering>false</filtering>
									<includes>
										<include>**/*.jar</include>
										<include>**/*.so</include>
										<include>**/*.gz</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<configuration>
					<keepRunning>false</keepRunning>
					<skip>false</skip>
					<showLogs>true</showLogs>
					<logAll>true</logAll>
					<verbose>true</verbose>
					<skipSave>${docker-maven-plugin.skip.save}</skipSave>
					<skipBuild>${docker-maven-plugin.build.save}</skipBuild>
					<autoCreateCustomNetworks>true</autoCreateCustomNetworks>
					<images>
						<image>
							<alias>mcf-current-project</alias>
							<name>mcf-sdk/current-project:development</name>
							<build>
								<buildOptions>
									<platforms>linux/amd64, linux/arm64</platforms>
								</buildOptions>
								<contextDir>${project.parent.basedir}/target</contextDir>
								<dockerFile>Dockerfile</dockerFile>
								<tags>
									<tag>latest</tag>
									<tag>${project.version}</tag>
								</tags>
							</build>
							<run>
								<network>
									<name>mcf-network</name>
									<alias>mcf-current-project</alias>
								</network>
								<ports>
									<port>${docker.tomcat.port.external}:${docker.tomcat.port.internal}</port>
								</ports>
								<wait>
									<http>
										<url>http://${docker.host.address}:${docker.tomcat.port.external}/mcf-crawler-ui</url>
									</http>
									<time>${docker.mcf.time.test}</time>
								</wait>
								<dependsOn>
									<container>mcf-postgres</container>
								</dependsOn>
							</run>
						</image>
						<image>
							<alias>mcf-postgres</alias>
							<name>${docker.mcf.database.image}</name>
							<run>
								<network>
									<name>mcf-network</name>
									<alias>mcf-postgres</alias>
								</network>
								<env>
									<POSTGRES_HOST_AUTH_METHOD>trust</POSTGRES_HOST_AUTH_METHOD>
									<POSTGRES_DB>${docker.mcf.database.server.db.name}</POSTGRES_DB>
									<POSTGRES_USER>${docker.mcf.database.username}</POSTGRES_USER>
									<!--<POSTGRES_PASSWORD>${docker.mcf.database.password}</POSTGRES_PASSWORD> -->
								</env>
								<ports>
									<port>${docker.mcf.database.port.external}:${docker.mcf.database.port.internal}</port>
								</ports>
								<wait>
									<log>database system is ready to accept connections</log>
									<time>20000</time>
								</wait>
								<volumes>
									<bind>mcf-postgres-volume:/var/lib/postgresql/data</bind>
								</volumes>
							</run>
						</image>
					</images>
					<volumes>
						<volume>
							<name>mcf-postgres-volume</name>
							<driver>local</driver>
						</volume>
					</volumes>
				</configuration>
			</plugin>
		</plugins>
	</build>
	 
	<profiles>
		<profile>
			<id>only-eclipse</id>
			<activation>
				<property>
					<name>m2e.version</name>
				</property>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.eclipse.m2e</groupId>
							<artifactId>lifecycle-mapping</artifactId>
							<version>${maven.lifecycle.mapping.plugin.version}</version>
							<configuration>
								<lifecycleMappingMetadata>
									<pluginExecutions>
										<pluginExecution>
											<pluginExecutionFilter>
												<groupId>org.apache.maven.plugins</groupId>
												<artifactId>maven-dependency-plugin</artifactId>
												<versionRange>${maven-dependency-plugin.version}</versionRange>
												<goals>
													<goal>copy</goal>
												</goals>
											</pluginExecutionFilter>
											<action>
												<ignore />
											</action>
										</pluginExecution>
									</pluginExecutions>
								</lifecycleMappingMetadata>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>

		</profile>
	</profiles>

</project>